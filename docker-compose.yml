services:
  spark:
    build:
      context: ./spark
      dockerfile: Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
      mariadb:
        condition: service_healthy
    environment:
      - SPARK_LOCAL_IP=spark
      - SPARK_LOCAL_HOSTNAME=spark
    networks:
      - default
    deploy:
      resources:
        limits:
          memory: 4G
      
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5

  mariadb:
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: honeypot
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mariadb", "-uroot", "-ppassword", "-e", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

  honeypot:
    build: 
      context: ./honeypot
      dockerfile: Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
